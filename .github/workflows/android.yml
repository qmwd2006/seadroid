name: Android CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

#    - name: set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8

    - name: create key.properties file
      run: cp app/key.properties.example app/key.properties

    - name: create keystore file
      run: keytool -genkey -v -keystore app/debug.keystore -alias AndroidDebugKey -keyalg RSA -keysize 2048 -validity 1 -storepass android -keypass android -dname "cn=TEST, ou=TEST, o=TEST, c=TE"

    - name: build with gradle
      run: ./gradlew assembleRelease

    - name: list build files
      run: |
        ls -alh app/build/outputs/apk/
        ls -alh app/build/outputs/apk/release/

    - name: upload artifact
      uses: actions/upload-artifact@master
      with:
        name: seadroid apk
        path: app/build/outputs/apk

    - name: gzip
      run: |
        tar -czvf seadroid.tar.gz app/build/outputs/apk/
        ls -alh seadroid.tar.gz

    - name: scp files
      uses: alinz/ssh-scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        user: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        # runs this on remove server
        ssh_before: |
          echo $GITHUB_WORKFLOW
          echo $GITHUB_RUN_ID
          echo $GITHUB_RUN_NUMBER
          mkdir -p $GITHUB_REPOSITORY/

        # then uploads files
        scp: |
          -P ${{ secrets.SSH_PORT }} seadroid.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/$GITHUB_REPOSITORY/

        # then run these commands
        ssh_after: |
          echo ssh_after

#    - name: Upload to release
#      uses: JasonEtco/upload-to-release@master
#      with:
#        args: seadroid.tar.gz application/octet-stream
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
